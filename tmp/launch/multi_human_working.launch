<?xml version="1.0"?>
<launch>
  <arg name="namespace" default="/hsrb"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true" />
  <arg name="rviz" default="true"/>
  <arg name="gazebo_visualization" default="false" />
  <arg name="use_manipulation" default="false" />
  <arg name="use_navigation" default="true" />
  <arg name="use_perception" default="true" />
  <arg name="use_task" default="true" />
  <arg name="use_teleop" default="true" />
  <arg name="use_web" default="false" />
  <arg name="use_laser_odom" default="false" />
  <arg name="paused" default="true" />
  <arg name="robot_pos"  default="-x 6 -y 4 -z 0 -Y 0" />
  <arg name="fast_physics" default="false" />
  <arg name="robot_name" default="hsrb" />
  <arg name="visualization" default="true" />
    <!--<arg name="implicit_damping" default="false" />-->
    <!--<arg name="implicit_damping" default="false" />-->
  <!--<arg name="world_suffix" default="" />-->
  <arg unless="$(arg fast_physics)" name="world_suffix" value=""/>
  <arg     if="$(arg fast_physics)" name="world_suffix" value="_fast"/>
  <!--<arg name="world_name" default="$(find tmc_gazebo_worlds)/worlds/empty$(arg world_suffix).world"/>-->
  <!--<arg name="world_name" value="$(find tmp)/worlds/apartment_human.world"/>-->
  <arg name="world_name" value="$(find tmp)/worlds/test_humantrajectory.world"/>
  <arg name="map" default="$(find tmc_potential_maps)/maps/apartment/map.yaml" />
  <param name="/use_sim_time" value="true"/>
  <arg name="param_file" default="$(optenv HOME ~)/.ros/params.yaml" />
  <!--<arg name="world_name" default="worlds/empty.world" />-->
  <param name="/tmp" command="rosrun tmc_roslaunch_tools symboliclink $(arg param_file) $(find hsrb_common_launch)/params/empty_params.yaml" />

  <!-- hsrb_empty_world -->
    <!--<group ns="$(arg namespace)">-->
      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="world_name" value="$(arg world_name)"/>
      </include>
    <!--</group>-->
  <!-- hsrb_empty_world end -->

  <!--<group ns="$(arg namespace)">-->
  <!-- hsrb.xml-->
    <!-- hsrb_no_controllers.xml-->
    <!--<include file="$(find hsrb_gazebo_bringup)/launch/include/hsrb_no_controllers.xml" pass_all_args="true">-->
      <!--<arg name="robot_pos" value="$(arg robot_pos)" />-->
        <!--<arg name="gazebo_visualization" value="$(arg gazebo_visualization)" />-->
        <!--<arg name="use_laser_odom" value="$(arg use_laser_odom)" />-->
        <!--<arg name="fast_physics" value="$(arg fast_physics)" />-->
        <!--<arg name="robot_name" value="$(arg robot_name)" />-->
      <!--</include>-->

    <arg unless="$(arg fast_physics)" name="implicit_damping" value="false"/>
    <arg     if="$(arg fast_physics)" name="implicit_damping" value="true"/>

    <arg unless="$(arg fast_physics)" name="gains_suffix" value=""/>
    <arg     if="$(arg fast_physics)" name="gains_suffix" value="_fast"/>

    <!--<include file="$(find hsrb_gazebo_bringup)/launch/include/upload_urdf_$(arg robot_name).xml">-->
        <!--<arg name="visualization" value="$(arg gazebo_visualization)" />-->
        <!--<arg name="implicit_damping" value="$(arg implicit_damping)" />-->
    <!--</include>-->
    <rosparam file="$(find hsrb_gazebo_bringup)/params/$(env ROS_DISTRO)/hsrb_pid_gains$(arg gains_suffix).yaml" command="load" />

    <!--<node name="spawn_hsrb_model" pkg="gazebo_ros" type="spawn_model"-->
          <!--args="-urdf -param robot_description -model hsrb $(arg robot_pos) -J arm_lift_joint 0.05 -J arm_flex_joint 0.0 -J arm_roll_joint -1.57 -J wrist_flex_joint -1.57 -J wrist_roll_joint 0.0 -J head_pan_joint 0.0 -J head_tilt_joint 0.0 -J hand_motor_joint 1.2"-->
          <!--respawn="false" output="screen" />-->
    <!--tmp-->
    <include file="$(find tmp)/launch/include/hsrb_bringup.xml">
        <arg name="use_laser_odom" value="$(arg use_laser_odom)" />
        <arg name="namespace" value="$(arg namespace)" />
        <arg name="robot_pos"  value="$(arg robot_pos)" />
    </include>

    <!-- hsrb_no_controllers.xml end-->
    <include file="$(find hsrb_gazebo_bringup)/launch/include/hsrb_default_controllers.xml">
        <arg name="namespace" value="$(arg namespace)" />
    </include>
  <!-- hsrb.xml end-->
    <!--<group>-->
      <include file="$(find tmp)/launch/include/hsrb_sensor.xml" >
        <arg name="namespace" value="$(arg namespace)" />
      </include>
    <!--</group>-->
    <node name="talk_action_simulator" pkg="tmc_talk_action_simulator" type="talk_request_server"/>
  <!-- hsrb_empty_world -->

  <!-- common -->
  <include file="$(find tmp)/launch/hsrb_common.launch">
    <arg name="namespace" value="$(arg namespace)" />
    <arg name="sim" value="true" />
    <arg name="use_manipulation" value="$(arg use_manipulation)" />
    <arg name="use_navigation" value="$(arg use_navigation)" />
    <arg name="use_perception" value="$(arg use_perception)" />
    <arg name="use_task" value="$(arg use_task)" />
    <arg name="use_teleop" value="$(arg use_teleop)" />
    <arg name="use_web" value="$(arg use_web)" />
    <arg name="map" value="$(arg map)"/>
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>



  <!-- load override parameters-->

  <!--<include file="$(find hsrb_gazebo_launch)/launch/include/hsrb_gazebo_common.xml" pass_all_args="true" >-->
  <!--<include file="$(find tmp)/launch/include/turtle/hsrb_gazebo_common.xml" pass_all_args="true" >-->
    <!--<arg name="map" default="$(find tmc_potential_maps)/maps/apartment/map.yaml" />-->
    <!--<arg name="world_name" value="$(find tmc_gazebo_worlds)/worlds/apartment_no_objects.world"/>-->
    <!--<arg name="robot_pos" value="-x 2 -y 5 -z 0 -Y 0" />-->
  <!--</include>-->

  <!--<group ns="/laser_2d_localizer">-->
    <!--<param name="init_x" value="0.5"/>-->
    <!--<param name="init_y" value="-1.5"/>-->
    <!--<param name="init_theta_deg" value="0.0"/>-->
  <!--</group>-->

  <rosparam command="load" file="$(arg param_file)" />
  <!--<node name ="hsrb_to_turtle2" pkg="tf" type="static_transform_publisher" args="0 0.0 0 0 0 0 /odom hsrb/odom 10"/>-->
  <!--<node name ="hsrb_to_turtle" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 /map /odom 10"/>-->
  <node name ="laser_to_hsrblaser" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 hsrb/base_range_sensor_link base_range_sensor_link 10"/>
  <node name ="basefoot_to_hsrb" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_footprint hsrb/base_footprint 10"/>
  <!--<node name ="basefoot_to_hsrb" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0  map hsrb/base_footprint 10"/>-->

  <!--turtlebot -->
  <arg name="first_tb3"  default="tb3"/>
  <arg name="map_file" default="$(find tmc_potential_maps)/maps/apartment/map.yaml" />
  <!--<node name ="world_turtle" pkg="tf" type="static_transform_publisher" args="0 -1.0 0 0 0 0 /map tb3/odom 10"/>-->

  <!--<node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>-->
  <!--<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>-->
  <!--<arg name="first_tb3_x_pos" default="2.0"/>-->
  <!--<arg name="first_tb3_y_pos" default="2.0"/>-->
  <!--<arg name="first_tb3_z_pos" default=" 0.0"/>-->
  <!--<arg name="first_tb3_yaw"   default=" 0.0"/>-->
  <!--<arg name="move_forward_only" default="false"/>-->

  <!--<group ns ="$(arg first_tb3)">-->
      <!--<param name="robot_description" command="$(find xacro)/xacro -inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />-->
      <!--<node name="spawn_urdf_tb3" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw)" />-->
    <!--<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">-->
      <!--<param name="publish_frequency" type="double" value="50.0" />-->
      <!--<param name="tf_prefix" type="string" value="$(arg first_tb3)" />-->
    <!--</node>-->
    <!--<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="false" output="screen">-->
        <!--<rosparam param="source_list">["/tb3/joint_states"]</rosparam>-->
    <!--</node>-->

   <!--AMCL -->
  <!--<include file="$(find turtlebot3_navigation)/launch/amcl.launch">-->
      <!--<arg name="scan_topic" value="tb3/scan" />-->
      <!--<arg name="initial_pose_x" value="5.0"/>-->
      <!--<arg name="initial_pose_y" value="2.0"/>-->
      <!--<arg name="initial_pose_a" value="0.0"/>-->
      <!--<arg name="odom_frame"  value="tb3/odom"/>-->
      <!--<arg name="base_frame"  value="tb3/base_footprint"/>-->
  <!--</include>-->

   <!--move_base -->
  <!--<include file="$(find tmp)/launch/tb3_move_base.launch">-->
    <!--<arg name="model" value="$(arg model)" />-->
    <!--<arg name="move_forward_only" value="$(arg move_forward_only)"/>-->
    <!--<arg name="odom_topic" value="tb3/odom"/>-->
    <!--<arg name="cmd_vel_topic" value="tb3/cmd_vel" />-->
  <!--</include>-->

    <!--<arg name="use_clock_frequency" default="false"/>-->
    <!--<arg name="enable_ros_network" default="true"/>-->
  <!--</group>-->

    <rosparam command="load" file="$(find turtlebot3_social)/param/forceFactors.yaml" />
    <param name="TB3_WITH_ACTOR" type="string" value="actor0" />
    <!--<param name="TB3_WITH_ACTOR" type="string" value="actor1" />-->
    <!--<param name="BASE_WORLD" type="string" value="empty.world" />-->
    <!--<param name="BASE_WORLD" type="string" value="apartment_human.world" />-->
    <!--<param name="SAVE_FILE" type="string" value="/root/dataset/overtaking_4_a1" />-->
    <!--<node name="create_world" pkg="actor_services" type="hsrb_world.py"/>-->

    <!--<param name="ACTOR_NUMBER" type="int" value="3" />-->
    <!--<node name="tfped2defaultworld" pkg="turtlebot3_social" type="tfped2defaultworld.py"/>-->

    <!--<group if="$(arg use_clock_frequency)">-->
        <!--<param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />-->
    <!--</group>-->

    <!--<group>-->
        <!--<param name="gazebo/enable_ros_network" value="$(arg enable_ros_network)" />-->
    <!--</group>-->

      <!--<include file="$(find gazebo_ros)/launch/empty_world.launch">-->
        <!--<arg name="paused" value="$(arg paused)"/>-->
        <!--<arg name="use_sim_time" value="true"/>-->
        <!--<arg name="gui" value="$(arg gui)"/>-->
        <!--<arg name="debug" value="$(arg debug)"/>-->
        <!--<arg name="world_name" value="$(arg world_name)"/>-->
      <!--</include>-->
 
  <node name="tb3_localization" pkg="villa_navi_service" type="estpose" output="screen"/>

  <node pkg="human_filter" type="srs_leg_detector" name="srs_leg_detector_front" args="scan:=hsrb/base_scan $(find human_filter)/config/trained_leg_detector.yaml front" output="screen" />
  <!--<node pkg="visual_perception" type="visible_manager" name="visible_region" output="screen" />-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find tmp)/config/hsrb_display_full_$(arg robot_name).rviz" if="$(arg rviz)"/>

</launch>

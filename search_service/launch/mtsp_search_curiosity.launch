<?xml version="1.0"?>
<launch>

    <arg name="agent1" default="turtlebot"/>
    <arg name="agent2" default="tb2"/>

    <rosparam file="$(find search_service)/config/ahg.yaml"/>
    <arg name="agent1_pose_topic" default="$(arg agent1)/amcl_pose"/>
    <arg name="agent2_pose_topic" default="$(arg agent2)/amcl_pose"/>
    
    <!-- /turtlebox/fov_map and /tb2/fov_map -->
    <!-- $(arg agent1)/move_base/local_costmap/costmap 
         $(arg agent2)/move_base/local_costmap/costmap-->
    <arg name="agent1_map_topic" default="$(arg agent1)/fov_map"/>
    <arg name="agent2_map_topic" default="$(arg agent2)/fov_map"/>
    <!-- <arg name="agent1_map_topic" default="$(arg agent1)/move_base/local_costmap/costmap"/>
    <arg name="agent2_map_topic" default="$(arg agent2)/move_base/local_costmap/costmap"/> -->
    <!-- Above Lines for FOV Map or sqaure FOV -->

    <arg name="planner_topic" default="$(arg agent1)/move_base/make_plan"/>
    <arg name="max_x" default="12.0"/>
    <arg name="min_x" default="-10.0"/>
    <arg name="max_y" default="10.0"/>
    <arg name="min_y" default="-10"/>
    <arg name="num_agents" default="2"/>

    <param name="MAX_X" value="$(arg max_x)"/>
    <param name="MAX_Y" value="$(arg max_y)"/>
    <param name="MIN_X" value="$(arg min_x)"/>
    <param name="MIN_Y" value="$(arg min_y)"/>
    <param name="AGENT1_POSE_TOPIC" value="$(arg agent1_pose_topic)"/>
    <param name="AGENT2_POSE_TOPIC" value="$(arg agent2_pose_topic)"/>
    <param name="AGENT1_MAP_TOPIC" value="$(arg agent1_map_topic)"/>
    <param name="AGENT2_MAP_TOPIC" value="$(arg agent2_map_topic)"/>
    <param name="PLANNER_TOPIC" value="$(arg planner_topic)"/>
    <param name="NUM_AGENT" value="$(arg num_agents)"/>
    <param name="DIR_PATH" value="$(arg num_agents)"/>


  <!--<node name="map_server" pkg="map_server" type="map_server" args="$(find tmp)/maps/full_demo_map.yaml"/>-->

    <node name="scaled_map_converter" pkg="search_service" type="scaled_map_converter" output="screen">
        <!--<remap from="/map" to="/walrus/map"/>-->
    </node>
    <node name="multisearch_action" pkg="search_service" type="mtsp_server_forward" output="screen">
        <remap from="/agent_0_path" to="/turtlebot/search_agent_manager/waypoint_plan"/>
        <remap from="/agent_1_path" to="/tb2/search_agent_manager/waypoint_plan"/>
    </node>
    <node name="getunknowns" pkg="visual_perception" type="prediction_server" output="screen"/>
    <!--<node name="tsp_solve_action" pkg="search_service" type="tsp_server" output="screen"/>-->
    <node name="polygon_client" pkg="search_service" type="plugin_client" output="screen"/>

    <node name="agent_0_tspsolve" pkg="search_service" type="stsp_server" output="screen"/>
    <node name="agent_1_tspsolve" pkg="search_service" type="stsp_server" output="screen"/>

    <arg name="target_nav_action_0" default="$(arg agent1)/move_base"/>
    <arg name="target_nav_action_1" default="$(arg agent1)/move_base"/>

    <arg name="target_path_0" default="agent_0_path"/>
    <arg name="target_path_1" default="agent_1_path"/>


    <arg name="get_plan_agent0" default="turtlebot/move_base/make_plan"/>
    <arg name="get_plan_agent1" default="tb2/move_base/make_plan"/>

    <!--<node name="agent_0_getpath" pkg="search_service" type="get_smooth_server" output="screen" args="$(arg get_plan_agent0)"/>-->
    <!--<node name="agent_1_getpath" pkg="search_service" type="get_smooth_server" output="screen" args="$(arg get_plan_agent1)"/>-->

    <node name="agent_0_getpath" pkg="search_service" type="get_forwardpath_server" output="screen"/>
    <node name="agent_1_getpath" pkg="search_service" type="get_forwardpath_server" output="screen"/>

    <!--<arg name="target_path_0" default="agent_0_path"/>-->
    <!--<arg name="target_path_1" default="agent_1_path"/>-->
    <!--<node name="path_follow_agent_0" pkg="search_service" type="path_follow_server" output="screen" args="$(arg target_nav_action_0) $(arg target_path_0)"/>-->
    <!--<node name="path_follow_agent_1" pkg="search_service" type="path_follow_server" output="screen" args="$(arg target_nav_action_1) $(arg target_path_1)"/>-->


    <!-- For FoV Map instead of square type -->
    <arg name="camera_frame" default="turtlebot/base_link"/>
    <node pkg="visual_perception" type="visible_manager" name="turtlebot_camera_region" output="screen" args="$(arg agent1_pose_topic) $(arg camera_frame)">
        <remap from="/camera_region_map" to="turtlebot/fov_map"/>
    </node>
    <arg name="camera_frame2" default="tb2/base_link"/>
    <node pkg="visual_perception" type="visible_manager" name="tb2_camera_region" output="screen" args="$(arg agent2_pose_topic) $(arg camera_frame2)">
        <remap from="/camera_region_map" to="tb2/fov_map"/>
    </node>



</launch>
